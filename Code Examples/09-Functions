import Foundation


// MARK: 1. Func without parameters
func sayHello() {
  print("Hello, world!")
}

sayHello()


// MARK: 2. Func with parameters
func printModuleInfo(topic: String, number: Int) {
  print("я изучаю \(topic) из модуля \(number)")
}

printModuleInfo(topic: "Функции", number: 13)

// Example
func sum(first: Int, second: Int, third: Int) {
  let sum = first + second + third
  print(sum)
}

sum(first: 4, second: 2, third: 3)


// MARK: 3. Func without labels
func sum(_ first: Int, _ second: Int, _ third: Int) {
  let sum = first + second + third
  print(sum)
}

// Short call
sum(4, 2, 3)


// MARK: 4. Inout parameters
// Example func without inout parameters
var number = 5
func increase(_ number: Int) -> Int {
  number + 1
}

let newNumber = increase(number)
number = newNumber

// With inout parameters
var number = 5
func increase(_ number: inout Int) {
  number += 1
}

increase(&number)

// Example
var firstName = "Kate"
var lastName = "Smith"
 
func change(firstName: inout String, lastName: inout String) {
  firstName = "Jane"
  lastName = "Sisko"
}

change(firstName: &firstName, lastName: &lastName)
print("Мои новые данные: \(firstName) \(lastName)")


// MARK: 5. Variadic parameters
func add(brands: [String]) {
    for brand in brands {
        print(brand)
    }
}

add(brands: ["Lada", "Kia"])
